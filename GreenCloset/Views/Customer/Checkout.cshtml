@model DataAccess.Models.Order
@{
    ViewData["Title"] = "Checkout";
}

<style>
    body {
        font-family: "Montserrat", sans-serif;
        background-color: #f3f3f1;
        color: #1a1a1a;
    }

    .font-heading {
        font-weight: 700;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        font-size: 18px;
    }
    .bg-white{
        margin-bottom: 0px !important;
    }
    .font-subheading {
        font-weight: 700;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        font-size: 12px;
    }

    .font-subheading-2 {
        font-weight: 700;
        letter-spacing: 0.1em;
        text-transform: uppercase;
        font-size: 12px;
    }

    .btn-disabled {
        background-color: #d8ede4 !important;
        color: #ffffff !important;
        cursor: not-allowed;
    }

    .btn-success {
        background-color: rgb(141, 198, 63) !important;
        color: #ffffff !important;
    }

    hr {
        border-color: #d1d1d1;
    }
    /* Disabled delivery address styling */
    .disabled-address {
        background-color: #fefefe !important;
        color: #a8a8a8 !important;
        font-weight: 700 !important;
        letter-spacing: 0.15em !important;
        text-transform: uppercase !important;
        cursor: not-allowed !important;
    }

    .payment-option {
        border: 1px solid #d1d1d1;
        border-radius: 0.25rem;
        padding: 0.75rem 1rem;
        cursor: pointer;
        user-select: none;
        transition: border-color 0.3s ease;
    }

        .payment-option input[type="radio"] {
            margin-right: 0.75rem;
            cursor: pointer;
        }

        .payment-option:hover {
            border-color: #1a1a1a;
        }

        .payment-option input[type="radio"]:checked + label {
            font-weight: 700;
            color: #1a1a1a;
        }
    /* New style for product box */
    .product-box {
        border: 1px solid #d1d1d1;
        border-radius: 0.25rem;
        padding: 0.75rem;
        background-color: #fff;
        font-size: 14px; /* increased font size */
        line-height: 1.4;
    }

        .product-box .fw-semibold.fs-6 {
            font-size: 18px; /* price bigger */
        }
</style>

<div class="container py-3">
    <header class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="font-heading flex-grow-1 text-center m-0">
            Thanh toán
        </h1>
    </header>
    <div class="row g-4">
        <!-- Left column 9 -->
        <div class="col-lg-8 order-lg-1 bg-white p-3">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h2 class="font-subheading m-0" style="font-size: 12px; letter-spacing: 0.15em; text-transform: uppercase;">
                    1 item
                </h2>
                <button class="btn btn-link p-0 m-0 text-dark fw-normal" type="button" style="font-size: 12px;">
                    Edit
                </button>
            </div>
            <hr />
            <div class="product-box d-flex gap-3 mb-3">
                <img alt="Man wearing black puffer jacket standing sideways" class="flex-shrink-0" height="40" src="https://storage.googleapis.com/a1aa/image/54f48d2d-d141-4408-897d-4332c557096f.jpg" width="100" />
                <div>
                    <div class="fw-bold">
                        Model.OrderDeta
                    </div>
                    <div class="fs-6 mb-1">
                        Đơn giá: 100.000 VND
                    </div>
                    <div class="fw-semibold mt-1">
                        Đen
                        <span class="fw-normal ms-2">XXS</span>
                    </div>
                    <div>
                        Số lượng: 1
                    </div>
                    <div class="fs-6 mb-1" id="rentalDays">
                        Số ngày thuê:
                    </div>
                    <div class="" style="font-size: 17px; margin-top: 10px;">
                        <span>
                            Thành tiền:
                        </span>
                        <span>
                            100.000 VND
                        </span>
                    </div>
                </div>
            </div>
            
            <hr />
            <div class="d-flex justify-content-between" style="font-size: 20px;" id="subtotalSection">
                <span>
                    Tổng tạm tính
                </span>
                <span id="subtotalAmount">
                    300.000 VND
                </span>
            </div>
            <div class="d-flex justify-content-between" style="font-size: 20px;" id="shippingFeeSection">
                <span>
                    Tổng phí giao hàng
                </span>
                <span id="shippingFeeAmount">
                    50.000 VND
                </span>
            </div>
            <div class="d-flex justify-content-between fw-bold text-uppercase" style="font-size: 20px; letter-spacing: 0.15em;" id="totalSection">
                <span>
                    Tổng số tiền
                </span>
                <span id="totalAmount">
                    350.000 VND
                </span>
            </div>
        </div>
        <!-- Right column 3 -->
        <section class="col-lg-4 order-lg-2 d-flex justify-content-end">
            <div style="width: 100%;">
                <div class="bg-white p-3 mb-3" >
                    <label class="font-subheading d-block mb-2" for="customerName">Tên khách hàng</label>
                    <div id="customerName" class="form-control">Phan Lê Đình Phúc</div>
                </div>

                <div class="bg-white p-3 mb-3" >
                    <label class="font-subheading d-block mb-2" for="phoneNumber">Số điện thoại</label>
                    <input class="form-control" id="phoneNumber" name="phoneNumber" type="tel" placeholder="Nhập số điện thoại" />
                </div>

                <div class="bg-white p-3 mb-3" >
                    <label class="font-subheading d-block mb-2" for="deliveryOptions">Tùy chọn giao hàng</label>
                    <select class="form-select" id="deliveryOptions" name="deliveryOptions">
                        <option value="1" selected>Giao hàng tận nơi</option>
                        <option value="2">Nhận hàng tại cửa hàng</option>
                    </select>
                </div>

                <div class="bg-white p-3 mb-3" >
                    <label class="font-subheading d-block mb-2" for="deliveryAddress">Địa chỉ nhận hàng</label>
                    <input class="form-control" id="deliveryAddress" name="deliveryAddress" type="text" placeholder="Nhập địa chỉ giao hàng" />
                </div>

                <div class="bg-white p-3 mb-3" id="paymentSection" >
                    <label class="font-subheading d-block mb-2">Phương thức thanh toán</label>
                    <div class="d-flex flex-column gap-3">

                        <div class="payment-option d-flex align-items-center mb-2">
                            <input id="paymentCOD" name="paymentMethod" type="radio" value="cod" checked class="me-2" style="margin-bottom: 0px;" />
                            <label class="mb-0 d-flex align-items-center" for="paymentCOD">
                                <i class="fas fa-money-bill-wave me-2 text-success"></i>
                                Trả tiền khi nhận hàng
                            </label>
                        </div>

                        <div class="payment-option d-flex align-items-center mb-2">
                            <input id="paymentVNPay" name="paymentMethod" type="radio" value="vnpay" class="me-2" style="margin-bottom: 0px;" />
                            <label class="mb-0 d-flex align-items-center" for="paymentVNPay">
                                <img src="https://cdn.haitrieu.com/wp-content/uploads/2022/10/Icon-VNPAY-QR.png" alt="VNPay" style="width: 30px;" class="me-2" />
                                VNPay
                            </label>
                        </div>

                        <div class="payment-option d-flex align-items-center">
                            <input id="paymentMoMo" name="paymentMethod" type="radio" value="momo" class="me-2" style="margin-bottom: 0px;" />
                            <label class="mb-0 d-flex align-items-center" for="paymentMoMo">
                                <img src="https://upload.wikimedia.org/wikipedia/vi/f/fe/MoMo_Logo.png" alt="MoMo" style="width: 30px;" class="me-2" />
                                MoMo
                            </label>
                        </div>

                    </div>
                </div>

                <button class="btn btn-disabled w-100 py-2" disabled id="checkoutBtn" type="button">
                    Tiến hành đặt hàng
                </button>
            </div>

        </section>
    </div>
</div>

<script>
      const deliveryOptions = document.getElementById('deliveryOptions');
      const deliveryAddress = document.getElementById('deliveryAddress');

      function updateDeliveryAddressState() {
        if (deliveryOptions.value === '1') {
          // Giao hàng tận nơi - enable input
          deliveryAddress.disabled = false;
          deliveryAddress.classList.remove('disabled-address');
          deliveryAddress.placeholder = "Nhập địa chỉ giao hàng";
        } else {
          // Nhận hàng tại cửa hàng - disable input
          deliveryAddress.disabled = true;
          deliveryAddress.classList.add('disabled-address');
          deliveryAddress.value = '';
          deliveryAddress.placeholder = "";
        }
      }

      deliveryOptions.addEventListener('change', updateDeliveryAddressState);

      // Initialize on page load
      updateDeliveryAddressState();

      const rentalDate = new Date("2025-04-16");
      const returnDate = new Date("2025-04-19");

      const timeDiff = returnDate.getTime() - rentalDate.getTime();
      const days = timeDiff / (1000 * 3600 * 24);

      document.getElementById('rentalDays').textContent =
        `Số ngày thuê: ${days} ngày - (16/04/2025 - 19/04/2025)`;

        // Lấy ngày từ Model (đảm bảo định dạng đúng cho JavaScript)


      // const timeDiff = returnDate.getTime() - rentalDate.getTime();
      // const days = timeDiff / (1000 * 3600 * 24);

      // // Định dạng ngày lại kiểu dd/MM/yyyy để hiển thị
      // const formattedStart = rentalDate.toLocaleDateString('vi-VN');
      // const formattedEnd = returnDate.toLocaleDateString('vi-VN');

      // document.getElementById('rentalDays').textContent =
      //     `Số ngày thuê: ${days} - (${formattedStart} - ${formattedEnd})`;

    const phoneInput = document.getElementById("phoneNumber");
    const deliverySelect = document.getElementById("deliveryOptions");
    const addressInput = document.getElementById("deliveryAddress");
    const checkoutBtn = document.getElementById("checkoutBtn");
    const paymentRadios = document.querySelectorAll('input[name="paymentMethod"]');

    function isPhoneValid() {
      return phoneInput.value.trim().length > 9 && phoneInput.value.trim().length < 11 ;
    }

    function isAddressValid() {
      if (deliverySelect.value === "1") {
        // Giao hàng tận nơi
        return addressInput.value.trim().length > 0;
      }
      return true; // Nhận tại cửa hàng thì không cần địa chỉ
    }

    function isPaymentSelected() {
      return Array.from(paymentRadios).some(r => r.checked);
    }

    function updateButtonState() {
      if (isPhoneValid() && isAddressValid() && isPaymentSelected()) {
        checkoutBtn.disabled = false;
        checkoutBtn.classList.remove("btn-disabled");
        checkoutBtn.classList.add("btn-success");
      } else {
        checkoutBtn.disabled = true;
        checkoutBtn.classList.add("btn-disabled");
        checkoutBtn.classList.remove("btn-success");
      }
    }

    // Lắng nghe sự kiện thay đổi
    phoneInput.addEventListener("input", updateButtonState);
    deliverySelect.addEventListener("change", () => {
      updateDeliveryAddressState(); // từ code gốc của bạn
      updateButtonState();
    });
    addressInput.addEventListener("input", updateButtonState);
    paymentRadios.forEach(radio => radio.addEventListener("change", updateButtonState));

    // Gọi khi trang vừa load
    updateButtonState();


        document.addEventListener("DOMContentLoaded", function () {
        const deliverySelect = document.getElementById("deliveryOptions");
        const shippingFeeSection = document.getElementById("shippingFeeSection");
        const shippingFeeAmount = document.getElementById("shippingFeeAmount");
        const subtotalAmount = document.getElementById("subtotalAmount");
        const totalAmount = document.getElementById("totalAmount");

        const shippingFee = 50000;
        const subtotal = 300000;

        function formatCurrency(value) {
            return value.toLocaleString('vi-VN') + ' VND';
        }

        function updateTotals() {
            let total = subtotal;

            subtotalAmount.textContent = formatCurrency(subtotal);

            if (deliverySelect.value === "2") {
                shippingFeeSection.style.setProperty("display", "none", "important");
            } else {
                shippingFeeSection.style.setProperty("display", "flex", "important");
                shippingFeeAmount.textContent = formatCurrency(shippingFee);
                total += shippingFee;
            }

            totalAmount.textContent = formatCurrency(total);
        }

        deliverySelect.addEventListener("change", updateTotals);
        updateTotals(); // Gọi khi load trang
    });



</script>