@model OrderDetail

@{
    var modalId = "feedbackModal_" + Model.Product?.Id;
}
<style>
    .modal-dialog {
        display: flex;
        align-items: center;
        min-height: calc(100% - 3.5rem);
    }

    .review-guide {
        background: #fff4e5;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
        text-align: center;
    }

    .review-text {
        width: 100%;
        height: 80px;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 15px;
        resize: none;
    }

    .rating-section {
        margin-bottom: 15px;
    }

    .stars {
        color: gold;
        font-size: 20px;
        margin-top: 5px;
    }

    .rating-text {
        color: orange;
        font-weight: bold;
        margin-left: 5px;
    }

    .stars {
        display: inline-block;
        font-size: 24px;
        cursor: pointer;
        color: gold;
        /* Màu mặc định cho sao */
    }

    .star {
        transition: color 0.2s;
    }

        .star:hover,
        .star.active {
            color: orange;
            /* Màu khi người dùng hover hoặc chọn */
        }

    .image-box {
        position: relative;
        width: 60px;
        height: 60px;
        border: 1px dashed #ccc;
        border-radius: 5px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .image-box {
        position: relative;
        width: 100px; 
        height: 100px;
        overflow: hidden;
        border: 1px solid #ddd;
        border-radius: 6px;
    }

        .image-box img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 6px;
        }

        .image-box .remove-btn {
            position: absolute;
            top: 4px;
            right: 4px;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 14px;
            font-family: Arial, sans-serif; 
            cursor: pointer;
            width: 20px;
            height: 20px;
            line-height: 18px;
            text-align: center;
            padding: 0;
            margin-top: 0px;
            margin: 0px;
        }

        .image-box.placeholder {
            border: 1px dashed #aaa;
            font-size: 12px;
            color: #999;
            margin-bottom: 5px;
        }


    #addImageBtn {
        border-color: gold; 
        color: #ff8f2c; 
    }

        #addImageBtn:hover {
            background-color: gold;
            color: white;
        }

        #addImageBtn:focus, #addImageBtn:active {
            box-shadow: none !important; 
            border-color: gold !important;
        }

</style>
<button id="btnFeedback" class="btn btn-warning shadow-0" data-bs-toggle="modal" data-bs-target="#@modalId"><i class="bi bi-star"></i> Đánh giá</button>
<!-- Modal Feedback  -->
<div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="@($"{modalId}Label")" aria-hidden="true">
    <div class="modal-dialog modal-lg w-100">
        <div class="modal-content">
            <form asp-action="SubmitFeedback" asp-controller="Customer" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="@($"{modalId}Label")">Đánh giá sản phẩm</h5>
                </div>
                <input type="hidden" name="productId" value="@Model.ProductId" />
                <input type="hidden" name="orderId" value="@Model.OrderId" />
                <div class="p-4 bg-light rounded text-start d-flex flex-column">

                    <div class="p-4 bg-light border border-3 bg-white rounded">
                        <div class="review-guide fw-bolder">
                            <span>⭐ Gửi đến chúng tôi đánh giá của bạn 🤗</span>
                        </div>
                        
                        <div class="d-flex align-items-start gap-3 mb-4">
                            @if(Model.Product?.ProductAvatar?.ImagePath != null){
                                <img src="@Model.Product?.ProductAvatar?.ImagePath" alt="Sản phẩm" class="img-fluid" style="width: 80px; height: 80px; object-fit: cover;">
                            }
                            else
                            {
                                <img src="https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg" alt="Product" class="img-thumbnail" style="width: 80px; height: 80px;" />
                            }   
                            <div class="d-flex flex-column">
                                <span class="text-black small fw-bold fs-4">
                                    @Model.Product?.Name
                                </span>
                                <span class="text-muted text-xs mt-1 fs-6" >
                                    Phân loại hàng: @Model.Product?.Color -
                                    @if (Model.SizeShoe.HasValue)
                                    {
                                        @Model.SizeShoe
                                    }
                                    else if (Model.SizeClother.HasValue)
                                    {
                                        @Model.SizeClother
                                    }  
                                </span>
                            </div>
                        </div>
                        <div class="rating-section">
                            <span>Chất lượng sản phẩm:</span>
                            <div class="stars" id="starRating">
                                <span class="star" data-value="1">☆</span>
                                <span class="star" data-value="2">☆</span>
                                <span class="star" data-value="3">☆</span>
                                <span class="star" data-value="4">☆</span>
                                <span class="star" data-value="5">☆</span>
                                <span class="rating-text">Xuất sắc</span>
                            </div>
                            <input type="hidden" name="stars" id="ratingInput" value="5" />
                        </div>
                        <textarea class="review-text form-control border-3" name="feedbackContent"
                                  placeholder="Hãy chia sẻ những gì bạn thích về sản phẩm này với những người mua khác."></textarea>
                        <div class="upload-section mt-3">
                            <input type="file" name="images" id="imageInput" multiple accept="image/*" style="display: none;" />
                            <button type="button" class="btn btn-outline-danger" id="addImageBtn" style="margin-bottom:16px;">
                                📷 Thêm ảnh
                            </button>
                            <div id="imagePreview" style="display: flex; gap: 10px; flex-wrap: wrap;"></div>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end p-3">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                    <button type="submit" class="btn btn-primary me-2" style="margin-left: 11px;">Submit</button>

                </div>
            </form>
        </div>
    </div>
</div>

<script>
        document.addEventListener("DOMContentLoaded", () => {
        const stars = document.querySelectorAll(".star");
        const ratingText = document.querySelector(".rating-text");
        const ratingInput = document.getElementById("ratingInput");
        const ratingLabels = {
            1: "Rất tệ",
            2: "Tệ",
            3: "Tạm tốt",
            4: "Tốt",
            5: "Xuất sắc"
        };

        let currentRating = 5; // Mặc định là 5 sao

        const setRating = (rating) => {
            currentRating = rating;
            stars.forEach(star => {
                const value = parseInt(star.dataset.value);
                star.textContent = value <= rating ? "★" : "☆";
                star.classList.toggle("active", value <= rating);
            });
            ratingText.textContent = ratingLabels[rating];
            ratingInput.value = rating; // Cập nhật giá trị vào input ẩn
        };

        stars.forEach(star => {
            star.addEventListener("click", () => {
                setRating(parseInt(star.dataset.value));
            });
        });

        setRating(currentRating); // Gọi lần đầu khi trang tải
    });

    // Upload & preview ảnh
    const imageInput = document.getElementById('imageInput');
    const imagePreview = document.getElementById('imagePreview');
    const addImageBtn = document.getElementById('addImageBtn');

    addImageBtn.addEventListener('click', () => imageInput.click());

    imageInput.addEventListener('change', () => {
        imagePreview.innerHTML = '';
        Array.from(imageInput.files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function (e) {
                const box = document.createElement('div');
                box.className = 'image-box';
                box.innerHTML = `<img src="${e.target.result}" /><button class="remove-btn" onclick="this.parentElement.remove()">×</button>`;
                imagePreview.appendChild(box);
            };
            reader.readAsDataURL(file);
        });
    });

    // Gửi ảnh đến server
    document.getElementById("submitBtn").addEventListener("click", async () => {
        let formData = new FormData();
        selectedFiles.forEach((file) => {
            formData.append("Images", file);
        });

        const response = await fetch("/Customer/SubmitFeedback", {
            method: "POST",
            body: formData
        });

        const result = await response.text();
        console.log(result);
    });
</script>